# This script was generated by crazy-complete.
# crazy-complete: A tool that creates robust and reliable autocompletion scripts for Bash, Fish and Zsh.
# For more information, visit: https://github.com/crazy-complete/crazy-complete

_go-sendxmpp_jid_from_history() {
  command grep go-sendxmpp "$HISTFILE" | command grep -E -o '[^ ]+@[^ ]+(/[^ ]+)?' | command sort | command uniq
}

_go-sendxmpp_prefix_compreply() {
  local i prefix="$1"
  for ((i=0; i < ${#COMPREPLY[@]}; ++i)); do
    COMPREPLY[i]="$prefix${COMPREPLY[i]}"
  done
}

_go-sendxmpp_exec() {
  local item desc

  while IFS=$'\t' read -r item desc; do
    if [[ "$item" == "$cur"* ]]; then
      COMPREPLY+=("$(printf '%q' "$item")")
    fi
  done < <(eval "$1")
}

_go-sendxmpp_parse_commandline() {
  POSITIONALS=()
  END_OF_OPTIONS=0

  local cmd="root" argi arg i char trailing_chars VAR ARGS

  __find_option() {
    case "$2" in
      --help) VAR=OPT_help; ARGS=0; return;;
      --version) VAR=OPT_version; ARGS=0; return;;
      -a|--alias) VAR=OPT_alias; ARGS=1; return;;
      -c|--chatroom) VAR=OPT_chatroom; ARGS=0; return;;
      -d|--debug) VAR=OPT_debug; ARGS=0; return;;
      --fast-off) VAR=OPT_fast_off; ARGS=0; return;;
      -f|--file) VAR=OPT_file; ARGS=1; return;;
      --headline) VAR=OPT_headline; ARGS=0; return;;
      -h|--http-upload) VAR=OPT_http_upload; ARGS=1; return;;
      -i|--interactive) VAR=OPT_interactive; ARGS=0; return;;
      -j|--jserver) VAR=OPT_jserver; ARGS=1; return;;
      -l|--listen) VAR=OPT_listen; ARGS=0; return;;
      -m|--message) VAR=OPT_message; ARGS=1; return;;
      --muc-password) VAR=OPT_muc_password; ARGS=1; return;;
      -n|--no-tls-verify) VAR=OPT_no_tls_verify; ARGS=0; return;;
      --oob-file) VAR=OPT_oob_file; ARGS=1; return;;
      --ox) VAR=OPT_ox; ARGS=0; return;;
      --ox-delete-nodes) VAR=OPT_ox_delete_nodes; ARGS=0; return;;
      --ox-genprivkey-rsa) VAR=OPT_ox_genprivkey_rsa; ARGS=0; return;;
      --ox-genprivkey-x25519) VAR=OPT_ox_genprivkey_x25519; ARGS=0; return;;
      --ox-import-privkey) VAR=OPT_ox_import_privkey; ARGS=1; return;;
      --ox-passphrase) VAR=OPT_ox_passphrase; ARGS=1; return;;
      -p|--password) VAR=OPT_password; ARGS=1; return;;
      --raw) VAR=OPT_raw; ARGS=0; return;;
      --scram-mech-pinning) VAR=OPT_scram_mech_pinning; ARGS=1; return;;
      --ssdp-off) VAR=OPT_ssdp_off; ARGS=0; return;;
      -s|--subject) VAR=OPT_subject; ARGS=1; return;;
      --timeout) VAR=OPT_timeout; ARGS=1; return;;
      -t|--tls) VAR=OPT_tls; ARGS=0; return;;
      --tls-version) VAR=OPT_tls_version; ARGS=1; return;;
      -u|--username) VAR=OPT_username; ARGS=1; return;;
    esac
    return 1
  }

  __append_to_array() {
    local -n arr=$1
    arr+=("$2")
  }

  for ((argi=1; argi < ${#words[@]} - 1; ++argi)); do
    arg="${words[argi]}"

    case "$arg" in
      --)
        END_OF_OPTIONS=1
        POSITIONALS+=("${words[@]:$((++argi))}")
        return;;
      --*=*)
        if __find_option "$cmd" "${arg%%=*}"
        then __append_to_array "$VAR" "${arg#*=}"
        fi;;
      --*)
        if __find_option "$cmd" "$arg"; then
          if [[ "$ARGS" == 1 ]]
          then __append_to_array "$VAR" "${words[++argi]}"
          else __append_to_array "$VAR" "_OPT_ISSET_"
          fi
        fi;;
      -?*) # ignore '-'

        for ((i=1; i < ${#arg}; ++i)); do
          char="${arg:$i:1}"
          trailing_chars="${arg:$((i + 1))}"

          if __find_option "$cmd" "-$char"; then
            if [[ "$ARGS" == 1 ]]; then
              if [[ -n "$trailing_chars" ]]
              then __append_to_array "$VAR" "$trailing_chars"
              else __append_to_array "$VAR" "${words[++argi]}"
              fi
              break;
            else
              __append_to_array "$VAR" "_OPT_ISSET_"
            fi
          fi
        done
        ;;
      *)
        POSITIONALS+=("$arg")
        ;;
    esac
  done

  for ((; argi < ${#words[@]}; ++argi)); do
    case "${words[argi]}" in
      -?*);;
      *) POSITIONALS+=("${words[argi]}");;
    esac
  done
}

_go_sendxmpp() {
  local cur prev words cword split
  _init_completion -n = || return

  local END_OF_OPTIONS POSITIONALS
  local -a OPT_help OPT_version OPT_alias OPT_chatroom OPT_debug OPT_fast_off OPT_file OPT_headline OPT_http_upload OPT_interactive OPT_jserver OPT_listen OPT_message OPT_muc_password OPT_no_tls_verify OPT_oob_file OPT_ox OPT_ox_delete_nodes OPT_ox_genprivkey_rsa OPT_ox_genprivkey_x25519 OPT_ox_import_privkey OPT_ox_passphrase OPT_password OPT_raw OPT_scram_mech_pinning OPT_ssdp_off OPT_subject OPT_timeout OPT_tls OPT_tls_version OPT_username

  _go-sendxmpp_parse_commandline

  local COMP_WORDBREAKS=''

  __complete_option() {
    local opt="$1" cur="$2"

    case "$opt" in
      --alias|-a|--jserver|-j|--muc-password|--oob-file|--ox-passphrase|--password|-p|--subject|-s|--timeout|--username|-u)
        return 0;;
      --file|-f|--http-upload|-h|--message|-m|--ox-import-privkey)
        _filedir
        return 0;;
      --scram-mech-pinning)
        COMPREPLY=($(compgen -W 'SCRAM-SHA-1 SCRAM-SHA-1-PLUS SCRAM-SHA-256 SCRAM-SHA-256-PLUS SCRAM-SHA-512 SCRAM-SHA-512-PLUS' -- "$cur"))
        return 0;;
      --tls-version)
        COMPREPLY=($(compgen -W '10 11 12 13' -- "$cur"))
        return 0;;
    esac

    return 1
  }

  case "$prev" in
    --*) __complete_option "$prev" "$cur" && return 0;;
    -*([cdilnt])[afhjmpsu])
         __complete_option "-${prev: -1}" "$cur" && return 0;;
  esac

  case "$cur" in
    --*=*)
      __complete_option "${cur%%=*}" "${cur#*=}" && return 0;;
    --*);;
    -*=*);;
    -*([cdilnt])[afhjmpsu]*)
      local i
      for ((i=2; i <= ${#cur}; ++i)); do
        local pre="${cur:0:$i}" value="${cur:$i}"
        __complete_option "-${pre: -1}" "$value" && {
          _go-sendxmpp_prefix_compreply "$pre"
          return 0
        }
      done;;
  esac

  if (( ! END_OF_OPTIONS )) && [[ "$cur" = -* ]]; then
    local -a opts
    if (( ! ${#OPT_help[@]} && ! ${#OPT_version[@]} )); then
      opts+=(--help --version)
      (( ! ${#OPT_alias[@]} )) && opts+=(-a --alias=)
      (( ! ${#OPT_chatroom[@]} && ! ${#OPT_headline[@]} && ! ${#OPT_ox[@]} )) && opts+=(-c --chatroom --headline)
      (( ! ${#OPT_debug[@]} )) && opts+=(-d --debug)
      (( ! ${#OPT_fast_off[@]} )) && opts+=(--fast-off)
      (( ! ${#OPT_file[@]} )) && opts+=(-f --file=)
      (( ! ${#OPT_http_upload[@]} && ! ${#OPT_interactive[@]} && ! ${#OPT_message[@]} && ! ${#OPT_ox[@]} )) && opts+=(-h --http-upload=)
      (( ! ${#OPT_http_upload[@]} && ! ${#OPT_interactive[@]} )) && opts+=(-i --interactive)
      (( ! ${#OPT_jserver[@]} )) && opts+=(-j --jserver=)
      (( ! ${#OPT_listen[@]} )) && opts+=(-l --listen)
      (( ! ${#OPT_http_upload[@]} && ! ${#OPT_message[@]} )) && opts+=(-m --message=)
      (( ! ${#OPT_muc_password[@]} )) && opts+=(--muc-password=)
      (( ! ${#OPT_no_tls_verify[@]} )) && opts+=(-n --no-tls-verify)
      (( ! ${#OPT_oob_file[@]} && ! ${#OPT_ox[@]} )) && opts+=(--oob-file=)
      (( ! ${#OPT_chatroom[@]} && ! ${#OPT_headline[@]} && ! ${#OPT_http_upload[@]} && ! ${#OPT_oob_file[@]} && ! ${#OPT_ox[@]} )) && opts+=(--ox)
      (( ! ${#OPT_ox_delete_nodes[@]} )) && opts+=(--ox-delete-nodes)
      (( ! ${#OPT_ox_genprivkey_rsa[@]} )) && opts+=(--ox-genprivkey-rsa)
      (( ! ${#OPT_ox_genprivkey_x25519[@]} )) && opts+=(--ox-genprivkey-x25519)
      (( ! ${#OPT_ox_import_privkey[@]} )) && opts+=(--ox-import-privkey=)
      (( ! ${#OPT_ox_passphrase[@]} )) && opts+=(--ox-passphrase=)
      (( ! ${#OPT_password[@]} )) && opts+=(-p --password=)
      (( ! ${#OPT_raw[@]} )) && opts+=(--raw)
      (( ! ${#OPT_scram_mech_pinning[@]} )) && opts+=(--scram-mech-pinning=)
      (( ! ${#OPT_ssdp_off[@]} )) && opts+=(--ssdp-off)
      (( ! ${#OPT_subject[@]} )) && opts+=(-s --subject=)
      (( ! ${#OPT_timeout[@]} )) && opts+=(--timeout=)
      (( ! ${#OPT_tls[@]} )) && opts+=(-t --tls)
      (( ! ${#OPT_tls_version[@]} )) && opts+=(--tls-version=)
      (( ! ${#OPT_username[@]} )) && opts+=(-u --username=)
    fi
    COMPREPLY+=($(compgen -W "${opts[*]}" -- "$cur"))
    [[ ${COMPREPLY-} == *= ]] && compopt -o nospace
    return 1
  fi

  (( ${#POSITIONALS[@]} >= 1 )) && {
    _go-sendxmpp_exec _go-sendxmpp_jid_from_history
    return 0;
  }

  return 1
}

complete -F _go_sendxmpp go-sendxmpp

# vim: ft=sh ts=2 sts=2 sw=2 et